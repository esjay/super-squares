---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
export const appName:string = 'Super Squares';
const alphaRange = 'ABCDEFGHIJ';
const range = [0,1,2,3,4,5,6,7,8,9];
const minDigit = Math.min(...range);
const maxDigit = Math.max(...range);
---

<Layout title={appName}>
	<main>
		<h1>{appName}</h1>
		<p class="instructions">
			Assign squares to people then, when you're ready, fill in the grid with randomly-selected score digits for each team.
		</p>
		<table class="squares">
			<thead><tr><th></th>{range.map(i => <th>{alphaRange[i]}</th>)}</tr></thead>
			<tbody>
				{ range.map((i) => 
					<tr>
						<th>{i}</th>
						{ range.map((j) => <td>
							<button data-column={alphaRange[j]} data-row={i}>X</button>
						</td>) }
					</tr>
				) }
			</tbody>
		</table>
	</main>
</Layout>

<script>
	const buttons = document.querySelectorAll('button');
	buttons.forEach((button) =>
		 button.addEventListener('click', (e) => {
			const el = e.target;
			console.log(`hi from ${el.getAttribute('data-column')}${el.getAttribute('data-row')}`);
		})
	);
</script>

<style lang="scss">
	.squares {
		padding: 0.2rem;
		&, & td {
			border: 1px solid #222;
		}
		td {

		}
	}
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
